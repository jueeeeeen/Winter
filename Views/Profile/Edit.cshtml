@model Winter_Project.ViewModels.ProfileViewModel

@{
    ViewData["Title"] = "Edit Profile";
}

<form asp-action="Edit" asp-controller="Profile" method="post" enctype="multipart/form-data">
    <div class="profile-container">
        <div class="profile-card">
            <div class="profile-header">
                <p>Profile</p>
            </div>

            <div class="account-info">
                <div class="upload-profile-picture">
                    <img id="profile-preview"
                        src="@(Model.ProfilePictureBase64 ?? Url.Content("~/assets/Profile-w-b.png"))"
                        alt="profile picture" class="profile-picture">
                    <button type="button" class="upload-profile-button">
                        <img src="\assets\upload-03.svg" alt="">
                        <label for="input-file">Upload Photo</label>
                        <input type="file" accept="image/jpg, image/png, image/jpeg" id="input-file"
                            name="ProfilePictureFile" onchange="previewImage(event)">
                    </button>
                </div>

                <p class="username">@("@" + Model.Username)</p>
                <p class="full-name">@Model.FirstName @Model.LastName</p>
                <p class="age">@(DateTime.Now.Year - Model.DateOfBirth.Year) years old</p>
            </div>

            <fieldset class="profile-details">
                <div>
                    <img src="\assets\location_b.svg" alt="location">
                    <input type="text" name="Location"
                        value="@(string.IsNullOrEmpty(Model.Location) ? "No information" : Model.Location)">
                </div>
                <div>
                    <img src="\assets\phone.svg" alt="phone">
                    <input type="text" name="Phone"
                        value="@(string.IsNullOrEmpty(Model.Phone) ? "No information" : Model.Phone)">
                </div>
                <div>
                    <img src="\assets\mail.svg" alt="mail">
                    <p>@Model.Email</p>
                </div>
            </fieldset>

            
        </div>

        <div class="profile-right-container">
            <div class="bio-card">
                <div class="profile-header">
                    <p>Bio</p>
                </div>

                <fieldset class="edit-bio">
                    <div class="bio-input">
                        <label for="about-me" class="bio-header">About me</label>
                        <textarea 
                            maxlength="150"
                            name="AboutMe">@(string.IsNullOrEmpty(Model.AboutMe) ? "No information" : Model.AboutMe)</textarea>
                    </div>
                    <div class="bio-input">
                        <label for="MyInterests" class="bio-header">My Interests</label>
                        <textarea
                            maxlength="150"
                            name="MyInterests">@(string.IsNullOrEmpty(Model.MyInterests) ? "No information" : Model.MyInterests)</textarea>
                    </div>
                    <div class="bio-input">
                        <label for="MyHobby" class="bio-header">My Hobby</label>
                        <textarea
                            maxlength="150"
                            name="MyHobby">@(string.IsNullOrEmpty(Model.MyHobby) ? "No information" : Model.MyHobby)</textarea>
                    </div>
                </fieldset>
            </div>

            <div class="personal-card">
                <div class="profile-header">
                    <p>Personal Information</p>
                </div>

                <fieldset class="user-fullname">
                    <div class="profile-input">
                        <label for="FirstName" class="bio-header">First Name</label>
                        <input type="text" name="FirstName" value="@Model.FirstName">
                    </div>
                    <div class="profile-input">
                        <label for="LastName" class="bio-header">Last Name</label>
                        <input type="text" name="LastName" value="@Model.LastName">
                    </div>
                </fieldset>

                <fieldset class="user-fullname">
                    <div class="profile-input">
                        <label for="DateOfBirth" class="bio-header">Birthday</label>
                        <input type="date" name="DateOfBirth" value="@Model.DateOfBirth.ToString("yyyy-MM-dd")">
                    </div>
                    <div class="profile-input">
                        <label for="" class="bio-header">Gender</label>
                        <div class="gender-button">
                            <button class="male-button" data-gender="Male">
                                <img src="\assets\male_icon-b.svg" alt="male icon">
                            </button>
                            <button class="lgbtq-button" data-gender="Lgbtq">
                                <img src="\assets\heart.svg" alt="lgbtq+ icon">
                            </button>
                            <button class="female-button" data-gender="Female">
                                <img src="\assets\female_icon-p.svg" alt="female icon">
                            </button>
                        </div>
                        <input type="hidden" id="gender" name="Gender" value="@Model.Gender">
                    </div>
                </fieldset>

                <div class="save-cancel-button">
                    <button type="submit" class="save-button">
                        <p>Save</p>
                    </button>
                    <button type="button" class="cancel-button"
                        onClick="location.href='@Url.Action("Index", "Profile")'">
                        <p>Cancel</p>
                    </button>
                </div>
            </div>
        </div>
    </div>
</form>

<script>
    function previewImage(event) {
        var reader = new FileReader();
        reader.onload = function () {
            var preview = document.getElementById("profile-preview");
            preview.src = reader.result; // อัปเดตรูปทันที
        };
        reader.readAsDataURL(event.target.files[0]); // อ่านไฟล์ที่เลือก
    }

    document.addEventListener("DOMContentLoaded", function () {
        const genderButtons = document.querySelectorAll(".gender-button button");
        const genderInput = document.getElementById("gender");

        genderButtons.forEach(button => {
            button.addEventListener("click", function (e) {
                e.preventDefault(); // ป้องกันการ submit form
                genderButtons.forEach(btn => btn.classList.remove("active"));
                this.classList.add("active");
                genderInput.value = this.getAttribute("data-gender");
                console.log("Gender selected:", genderInput.value);
            });
        });
    });
</script>
