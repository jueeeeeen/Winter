@model Winter_Project.ViewModels.NavbarProfileViewModel

@{
    var notifications = (List<NotificationModel>)ViewData["Notifications"];
}

<nav class="gradient_blue shadow nav_bar_container">
    <ul class="no_select nav_bar">
        <li><a href="/" class="flex flex_center nav-home"><img src="/assets/home.svg" alt="home"></a></li>
        <li><a href="/Activity" class="nav-activity">Activity</a></li>
        <li class="logo">
            <a href="/" class="flex"><img src="/assets/winter_logo-w.svg" alt="Winter Logo" /></a>
        </li>
        <li class="m_left_auto">
            <button class="btn medium w-mb round hover-db-w" id="create_button" onclick="window.location.href='/Create'">
                <img src="/assets/plus-b.svg" alt="plus icon">create
            </button>
        </li>
        <li><button class="btn circle round w-mb hover-y-w" id="bell_button">
            <img src="/assets/bell_icon-g.svg" alt="bell"></button>
        </li>
        <li><button class="btn circle round w-mb hover-b-w" id="profile_button">
            <img src="/assets/Profile-w-b.png" alt="profile"></button>
        </li>
        <li class="pseudo-btn">
            <input type="checkbox" id="hamburger-check">
            <label class="hamburger" for="hamburger-check">
                <svg-hamburger></svg-hamburger>
                <svg-x></svg-x>
            </label>
            <ul class="hamburger-dropdown">
                <li><a href="/"><svg-home></svg-home> Home</a></li>
                <li><a href="/Activity"><svg-tile></svg-tile> View Activity</a></li>
                <li><a href='/Create'><svg-plus></svg-plus> Create Activity</a></li>
            </ul>
        </li>
    </ul>
    <div class="profile_dropdown w-mb-mb edge" id="profile_dropdown">
        <div>
            <div class="info_dropdown">
                <div class="profile-container-dropdown">
                    <img id="profile_pic_dropdown" src="@(string.IsNullOrEmpty(Model.ProfilePictureBase64) ? Url.Content("~/assets/Profile-w-b.png") : Model.ProfilePictureBase64)" width="40px" class="profile-picture-dropdown">
                </div>
                
                <span class="first-name-dropdown">@Model.FirstName</span>
                <span class="last-name-dropdown">@Model.LastName</span>
                <span class="username_dropdown">@Model.Username</span>
            </div>
            <hr class="blue_line">
            <ul>
                <li class="btn_dropdown"><img src="/assets/person.svg"><a href="/Profile">My Profile</a></li>
                <hr class="blue_line_dash">
                <li class="btn_dropdown"><img src="/assets/activity.svg"><a href="/MyActivity">My Activity</a></li>
                <hr class="blue_line_dash">
                <li class="btn_dropdown"><img src="/assets/star_outline.svg"><a href="/MyRating">My Ratings</a></li>
                <hr class="blue_line_dash">
            </ul>
        </div>
        
        <form method="post" asp-controller="Account" asp-action="Logout">
            <button class="btn small w-r-r hover-r-w edge" id="logout_button">
                <svg-logout></svg-logout>log out
            </button>
        </form>
    </div>

    <div class="noti-dropdown-container shadow" id="noti_dropdown">
        <span class="noti-header">Notifications</span>
        <hr>
        <ul>
            @* <approved-noti></approved-noti>
            <denied-noti></denied-noti> *@
            @foreach (var notification in notifications)
            {
                @if (notification.Notification_type == "pending")
                {
                    <joined-noti 
                        activity-id="@notification.Activity_id" 
                        activity-title="asdf" 
                        name="asdfdsfadasfdsafdasfsadf" 
                        time="@notification.Notification_time.ToString("dd MMM yyyy HH:mm")">
                    </joined-noti>
                }
            }
        </ul>
    </div>
</nav>

<script>
    function change_icon(element, icon_hover, icon_default) {
        element.onmouseover = () => {
            element.firstElementChild.src = "/assets/" + icon_hover;
        }

        element.onmouseleave = () => {
            element.firstElementChild.src = "/assets/" + icon_default;
        }
    }

    const profile_button = document.querySelector("#profile_button");
    const bell_button = document.querySelector("#bell_button");
    const create_button = document.querySelector("#create_button");
    const logout_button = document.querySelector("#logout_button");

    profile_button.addEventListener("click", toggle_profile_dropdown);
    bell_button.addEventListener("click", toggle_noti_dropdown);

    change_icon(profile_button, "Profile-b.png", "Profile-w-b.png");
    change_icon(bell_button, "bell_icon-w.svg", "bell_icon-g.svg");
    change_icon(create_button, "plus-w.svg", "plus-b.svg");
    change_icon(logout_button, "logout-w.svg", "logout.svg");

    function toggleDropdown(currentId, otherId) {
        const currentDropdown = document.querySelector(`#${currentId}`);
        const otherDropdown = document.querySelector(`#${otherId}`);

        if (otherDropdown && otherDropdown.classList.contains("show")) {
            otherDropdown.classList.remove("show");
        }

        currentDropdown.classList.toggle("show");
    }

    function toggle_profile_dropdown() {
        toggleDropdown("profile_dropdown", "noti_dropdown");
    }

    function toggle_noti_dropdown() {
        toggleDropdown("noti_dropdown", "profile_dropdown");
    }
</script>
